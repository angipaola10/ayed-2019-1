from sys import stdin
from heapq import heappush, heappop

def uglynumber(n,k):
    for i in range(2,n):
        if n/i == int(n/i):
            if int(n/i) in k and i in k:
                k =[]
                break
    if k==[]:
        return True
    else:
        return False
    
def ordered(heap):
    o = []
    while heap:
        o.append(heappop(heap))
    return o

def main():
    n = int(stdin.readline().strip())
    l = [int(x) for x in stdin.readline().strip().split()]
    heap = []
    for i in l:
        heappush(heap,i)
    k = ordered(heap)
    if n == 1:
        print(1)
    elif n == 2:
        print(2)
    else:
        v = 3
        while len(k) < n:
            if (v not in k) and (uglynumber(v,k)==True):
                heappush(k,v)
                k = ordered(k)
            v+=1
        print(k[-2])
main()
            
        
